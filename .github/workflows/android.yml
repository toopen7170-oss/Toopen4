name: Android APK
on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04
    defaults:
      run:
        shell: bash
        working-directory: ./
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install deps (free/open-source)
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git zip unzip libffi-dev libssl-dev libsndfile1 curl openjdk-17-jdk
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=${{ github.workspace }}/.android/sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=${{ github.workspace }}/.android/sdk" >> $GITHUB_ENV
          echo "PATH=/usr/lib/jvm/java-17-openjdk-amd64/bin:${{ github.workspace }}/.android/sdk/cmdline-tools/latest/bin:${{ github.workspace }}/.android/sdk/platform-tools:${PATH}" >> $GITHUB_ENV
          python -m pip install --upgrade pip
          python -m pip install buildozer cython==0.29.36 virtualenv

      - name: Verify Java 17
        run: |
          echo "JAVA_HOME=$JAVA_HOME"
          which java || true
          java -version

      - name: Install Android cmdline-tools + SDK/NDK (official free)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
          JAVA_HOME: ${{ env.JAVA_HOME }}
        run: |
          set -e
          mkdir -p "$ANDROID_SDK_ROOT"
          cd "$ANDROID_SDK_ROOT"
          curl -L -o cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          mkdir -p cmdline-tools
          unzip -q -o cmdtools.zip -d cmdline-tools
          [ -d cmdline-tools/cmdline-tools ] && mv -f cmdline-tools/cmdline-tools cmdline-tools/latest || true
          export PATH="$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$JAVA_HOME/bin:$PATH"

          # 라이선스 비대화형 수락(두 번 수행하여 환경차 흡수)
          yes | sdkmanager --sdk_root="$ANDROID_SDK_ROOT" --licenses || true
          yes | sdkmanager --licenses || true

          # 안정 조합 설치: 33.0.2 + 34.0.0 (둘 다 AIDL 포함)
          sdkmanager --sdk_root="$ANDROID_SDK_ROOT" \
            "platform-tools" \
            "platforms;android-34" \
            "build-tools;33.0.2" \
            "build-tools;34.0.0" \
            "ndk;25.1.8937393" \
            "cmake;3.22.1"

          echo "== Installed build-tools =="
          ls -al "$ANDROID_SDK_ROOT/build-tools" || true
          echo "== AIDL search =="
          find "$ANDROID_SDK_ROOT/build-tools" -maxdepth 2 -name aidl -print || true

          echo "PATH=$PATH" >> $GITHUB_ENV
          echo "ANDROIDSDK=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
          echo "ANDROIDNDK=$ANDROID_SDK_ROOT/ndk/25.1.8937393" >> $GITHUB_ENV
          echo "ANDROIDAPI=34" >> $GITHUB_ENV
          echo "NDKAPI=23" >> $GITHUB_ENV

      - name: Cache .buildozer (free cache)
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}

      - name: Build with Buildozer (free toolchain)
        env:
          PATH: ${{ env.ANDROID_SDK_ROOT }}/build-tools/34.0.0:${{ env.ANDROID_SDK_ROOT }}/build-tools/33.0.2:${{ env.ANDROID_SDK_ROOT }}/platform-tools:${{ env.ANDROID_SDK_ROOT }}/cmdline-tools/latest/bin:${{ env.JAVA_HOME }}/bin:${{ env.PATH }}
          ANDROIDSDK: ${{ env.ANDROIDSDK }}
          ANDROIDNDK: ${{ env.ANDROIDNDK }}
          ANDROIDAPI: ${{ env.ANDROIDAPI }}
          NDKAPI: ${{ env.NDKAPI }}
        run: |
          set -e
          python -V
          ls -al
          echo "# Check aidl in PATH"
          which aidl || (echo "aidl still missing in PATH"; exit 1)
          buildozer android debug

      - name: Upload APK (free artifact)
        uses: actions/upload-artifact@v4
        with:
          name: toopen4-apk
          path: bin/*.apk
